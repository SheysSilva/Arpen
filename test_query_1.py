#Generated by Selenium IDE
# -*- coding: utf-8 -*-

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager

driver = webdriver.Chrome(ChromeDriverManager().install())

time.sleep(10)
wh_now = driver.window_handles
wh_then = vars["window_handles"]
if len(wh_now) > len(wh_then):
    set(wh_now).difference(set(wh_then)).pop()

driver.get("https://www4.receita.pb.gov.br/atf/")
driver.set_window_size(1210, 741)
driver.switch_to.frame(1)
driver.find_element(By.NAME, "btnAvancar").click()
driver.switch_to.frame(0)
driver.find_element(By.LINK_TEXT, "NFC-e").click()
driver.find_element(By.LINK_TEXT, "Consulta por Emitente").click()
driver.switch_to.default_content()
driver.switch_to.frame(1)
driver.find_element(By.NAME, "edtDtInicial").click()
driver.find_element(By.NAME, "edtDtInicial").send_keys("28/09/2019")
driver.find_element(By.NAME, "edtDtFinal").send_keys("280")
driver.find_element(By.NAME, "edtDtInicial").click()
driver.find_element(By.NAME, "edtDtInicial").click()
driver.find_element(By.NAME, "edtDtInicial").click()
driver.find_element(By.NAME, "edtDtInicial").send_keys("28/08/2019")
driver.find_element(By.NAME, "edtDtFinal").send_keys("28/08/2019")
driver.switch_to.frame(0)
driver.find_element(By.NAME, "hidNrDocumentocmpEmit").click()
driver.find_element(By.NAME, "hidNrDocumentocmpEmit").send_keys("16.150.180-0")
driver.find_element(By.NAME, "btnPesquisar").click()
driver.switch_to.default_content()
dropdown = driver.find_element(By.NAME, "cmbTpExibicao")
dropdown.find_element(By.XPATH, "//option[. = 'XML']").click()
element = driver.find_element(By.NAME, "cmbTpExibicao")
actions = ActionChains(driver)
actions.move_to_element(element).click_and_hold().perform()
element = driver.find_element(By.NAME, "cmbTpExibicao")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
element = driver.find_element(By.NAME, "cmbTpExibicao")
actions = ActionChains(driver)
actions.move_to_element(element).release().perform()
driver.find_element(By.NAME, "cmbTpExibicao").click()
driver.find_element(By.NAME, "btnConsultar").click()
driver.find_element(By.LINK_TEXT, "O resultado será enviado para sua caixa de mensagens do ATF. Clique aqui para acessá-la.").click()
driver.find_element(By.CSS_SELECTOR, ".onLight > td:nth-child(4) > a").click()
driver.find_element(By.NAME, "btnNovas").click()
element = driver.find_element(By.NAME, "btnNovas")
actions = ActionChains(driver)
actions.move_to_element(element).click_and_hold().perform()
element = driver.find_element(By.NAME, "btnNovas")
actions = ActionChains(driver)
actions.move_to_element(element).perform()
element = driver.find_element(By.NAME, "btnNovas")
actions = ActionChains(driver)
actions.move_to_element(element).release().perform()
driver.find_element(By.NAME, "btnNovas").click()
driver.find_element(By.CSS_SELECTOR, ".onLight > td:nth-child(4) > a").click()
vars["window_handles"] = driver.window_handles
driver.find_element(By.CSS_SELECTOR, "td > a > b").click()
vars["win8112"] = wait_for_window(2000)
vars["root"] = driver.current_window_handle
driver.switch_to.window(vars["win8112"])
driver.close()
driver.switch_to.window(vars["root"])

  
